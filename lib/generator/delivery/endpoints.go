package delivery

import (
	"bytes"
	"github.com/k0marov/gometa/lib/helpers"
	"github.com/k0marov/gometa/lib/schema"
	"io"
	"log"
	"text/template"
)

var endpointsTemplate = template.Must(template.New("").Parse(`
package delivery

import (
    "github.com/gin-gonic/gin"
)

func Add{{.Entity.Name}}Group(h *{{.Entity.Name}}Handlers, g *gin.RouterGroup) {
    g.POST("/", h.Create)
	g.GET("/:id", h.Get) 
    g.PUT("/", h.Update) 
	g.DELETE("/:id", h.Delete)
}
`))

func GenerateEndpoints(ent schema.Entity, out io.Writer) {
	templateData := struct {
		Entity schema.Entity
	}{
		Entity: ent,
	}
	var generated bytes.Buffer
	err := endpointsTemplate.Execute(&generated, templateData)
	if err != nil {
		log.Fatalf("error while executing endpoints template: %v", err)
	}
	if err := helpers.WriteFormatted(generated.Bytes(), out); err != nil {
		log.Fatalf("while formatting endpoints file: %v", err)
	}
}
